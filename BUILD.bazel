load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("@npm//next:index.bzl", "next")
load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")

# gazelle:build_file_name BUILD
# gazelle:exclude node_modules
# gazelle:exclude benchsci/frontend/reagent/node_modules
# gazelle:exclude benchsci/frontend/ern/node_modules
gazelle(
    name = "gazelle",
    extra_args = [
        "-generate_js_tests",  # enables jest_node_test generation for .test.js files
        "-alias_import_support",
    ],
    gazelle = ":gazelle_js",
)

gazelle_binary(
    name = "gazelle_js",
    languages = DEFAULT_LANGUAGES + [
        "@ecosia_bazel_rules_nodejs_contrib//gazelle:go_default_library",
    ],
    visibility = [
        "//visibility:public",
    ],
)

load("@build_bazel_rules_nodejs//:index.bzl", "copy_to_bin")

copy_to_bin(
    name = "data",
    srcs = [
        "next.config.js",
        "next-env.d.ts",
        "package.json",
        "postcss.config.js",
        "tailwind.config.js",
    ],
)

exports_files(["tsconfig.json", "Global.d.ts"])

next(
    name = ".next",
    args = [
        "build",
        "$(RULEDIR)",
    ],
    data = [
        ":data",
        "//pages:_app",
        "//pages:_document",
        "//pages:index",
        "//styles:global_css",
        "//styles:index_css",
        "//styles:utils.module_css",
        "@npm//tailwindcss",
        "@npm//typescript",
    ],
    output_dir = True,
)
