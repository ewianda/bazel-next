load("//:defs.bzl", "web_asset")
load("@com_github_benchsci_rules_nodejs_gazelle//:defs.bzl", "ts_definition")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("@npm//:defs.bzl", "npm_link_all_packages")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:next/package_json.bzl", next_bin = "bin")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@build_bazel_rules_nodejs//:index.bzl", "copy_to_bin")
load("@aspect_rules_js//js:defs.bzl", "js_binary", "js_run_binary", "js_test")
load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")

npm_link_all_packages(name = "node_modules")

# gazelle:js_root
# gazelle:js_web_asset .json,.css,.scss,.jpg,.gif,.svg,.png
# gazelle:js_package_file package.json
# gazelle:npm_label //:node_modules/
# gazelle:exclude **/node_modules
# gazelle:map_kind ts_project    ts_project     //:defs.bzl
# gazelle:map_kind js_library    js_library     //:defs.bzl
# gazelle:map_kind web_asset     web_asset      //:defs.bzl
# gazelle:js_visibility //visibility:public

gazelle(
    name = "gazelle",
    gazelle = ":gazelle_js",
)

gazelle_binary(
    name = "gazelle_js",
    languages = DEFAULT_LANGUAGES + [
        "@com_github_benchsci_rules_nodejs_gazelle//gazelle",
    ],
)

copy_to_bin(
    name = "data",
    srcs = [
        "next.config.js",
        "next-env.d.ts",
        "package.json",
        "postcss.config.js",
        "tailwind.config.js",
        # "tsconfig.json",
    ] + glob(["_posts/*.md"]),
)

copy_to_bin(
    name = "tsconfig",
    srcs = [
        "tsconfig.json",
    ],
    visibility = ["//visibility:public"],
)

copy_to_bin(
    name = "build_deps",
    srcs = [
        ".swcrc",
        "Global.d.ts",
    ],
    visibility = ["//visibility:public"],
)

copy_to_bin(
    name = "swcrc",
    srcs = [".swcrc"],
    visibility = ["//:__subpackages__"],
)

DATA = [
    ":data",
    "//pages:_app",
    "//pages:_document",
    "//pages:index",
    "//styles:global_css",
    "//styles:index_css",
    "//styles:utils_module_css",
    "//:node_modules/tailwindcss",
    "//:node_modules/typescript",
    # Image assets
    "//public/images:profile_jpg",
    "//public/favicon:safari-pinned-tab_svg",
    "//public/favicon:mstile-150x150_png",
    "//public/favicon:favicon-32x32_png",
    "//public/favicon:favicon-16x16_png",
    "//public/favicon:apple-touch-icon_png",
    "//public/favicon:android-chrome-512x512_png",
    "//public/favicon:android-chrome-192x192_png",
    "//public/assets/blog/preview:cover_jpg",
    "//public/assets/blog/hello-world:cover_jpg",
    "//public/assets/blog/dynamic-routing:cover_jpg",
    "//public:zeit_svg",
]

js_run_binary(
    name = "build",
    srcs = DATA,
    #chdir = "$(RULEDIR)",
    outs = [".next"],
    args = [
        "build",
    ],
    tool = ":next_bin",
)

next_bin.next_binary(
    name = "dev",
    args = ["dev"],
    data = DATA,
    # TODO: Next.js isn't able to detect when to pick update changes
    # when watching the runfiles. This prevents it from rebuilding & refreshing
    # when running under ibazel with `ibazel_notify_changes`
    # tags = ["ibazel_notify_changes"],
)

next_bin.next_binary(
    name = "start",
    args = [
        "start -p 8090",
        "--node_options=--preserve-symlinks-main",
    ],
    data = [
        ":.next",
    ] + DATA,
    tags = [
        "manual",
        # Tell ibazel not to restart the devserver when its deps change.
        "ibazel_notify_changes",
        # Tell ibazel to serve the live reload script, since we expect a browser will connect to
        # this program.
        "ibazel_live_reload",
    ],
)

#nodejs_image(
#    name = "client_image",
#    args = ["start"],
#    data = [
#        ":.next",
#    ] + DATA,
#    entry_point = {"//:node_modules/:node_modules/next": "dist/bin/next"},
#    templated_args = ["--bazel_patch_module_resolver"],
#)

ts_definition(
    name = "Global.d",
    srcs = ["Global.d.ts"],
    visibility = ["//visibility:public"],
)

ts_definition(
    name = "next-env.d",
    srcs = ["next-env.d.ts"],
    visibility = ["//visibility:public"],
)

js_library(
    name = "next.config",
    srcs = ["next.config.js"],
    visibility = ["//visibility:public"],
)

js_library(
    name = "postcss.config",
    srcs = ["postcss.config.js"],
    visibility = ["//visibility:public"],
)

js_library(
    name = "tailwind.config",
    srcs = ["tailwind.config.js"],
    visibility = ["//visibility:public"],
)

web_asset(
    name = "package_json",
    srcs = ["package.json"],
    visibility = ["//visibility:public"],
)

web_asset(
    name = "tsconfig_json",
    srcs = ["tsconfig.json"],
    visibility = ["//visibility:public"],
)
